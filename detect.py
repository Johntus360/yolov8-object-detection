# -*- coding: utf-8 -*-
"""Detect.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dgQgb7Y0oGTRP3gZD63t3hiX55y4eVHH
"""

#Step 1: Install the necessary libraries
#!pip install ultralytics
#!pip install opencv-python

!pip install ultralytics

!pip install opencv-python

#Step 2: Import Libraries

from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt
from google.colab import files
from PIL import Image

# Step 3: Load the YOLOv8 pre-trained model (YOLOv8n for speed, YOLOv8m for better accuracy)
model = YOLO('yolov8n.pt')

# Step 4: Upload Image
uploaded = files.upload()
for filename in uploaded.keys():
    # Read and display original image
    img = cv2.imread(filename)
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    plt.imshow(img_rgb)
    plt.axis('off')
    plt.title("Original Image")
    plt.show()

# Step 5: Run Detection
results = model.predict(source=filename, save=False, conf=0.3)

# Step 6: Draw bounding boxes on the image


for result in results:
    boxes = result.boxes.xyxy.cpu().numpy()  # shape: (n,4) -> [x1,y1,x2,y2]
    classes = result.boxes.cls.cpu().numpy()  # shape: (n,)  -> class IDs (floats often)
    confs = result.boxes.conf.cpu().numpy()   # shape: (n,)  -> confidence scores
    labels = [model.names[int(cls)] for cls in classes]


for (box, label, conf) in zip(boxes, labels, confs):
    x1, y1, x2, y2 = box.astype(int)
    cv2.rectangle(img_rgb, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(img_rgb, f"{label} {conf:.2f}", (x1, y1-10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,255,0), 2)

# Step 7: Display Dtected Objects
plt.imshow(img_rgb)
plt.axis('off')
plt.title("Detected Objects")
plt.show()